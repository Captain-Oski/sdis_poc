version: "3.4"
services:
  pg:
    image: "postgis/postgis:14-3.3"
    ports:
    - 5432:5432
    environment: 
    - POSTGRES_PASSWORD=password
    volumes:
    - ./etl/createPostgresStack.sql:/docker-entrypoint-initdb.d/create_postgres_stack.sql
    - pgdata:/var/lib/postgresql/data
    restart: always
  pg_tileserv:
    image: "pramsey/pg_tileserv:latest"
    ports:
    - 8801:7800
    environment:
    - DATABASE_URL=postgresql://admin_geo:password@pg/sdis
    depends_on:
    - "pg"
    restart: always
  pg_featureserv:
    image: "pramsey/pg_featureserv:latest"
    ports:
    - 9000:9000
    environment:
    - DATABASE_URL=postgresql://admin_geo:password@pg/sdis
    depends_on:
    - "pg"
    restart: always
  server-web:
    image: nginx
    ports:
      - 8000:80
    environment:
        DB_HOST: pg # Utilisez le même nom que le service de la base de données dans docker-compose.yml
    volumes:
      - ./app/:/usr/share/nginx/html
  api:
      build:
        context: .
        dockerfile: Dockerfile
      restart: always
      environment:
        DB_USER: 'admin_geo'
        DB_HOST: pg # Utilisez le même nom que le service de la base de données dans docker-compose.yml
        DB_NAME: 'sdis'
        DB_PASSWORD: 'password'
      depends_on:
        - pg
      ports:
        - "3000:3000"
      volumes:
        - ./api/index.js:/usr/src/app/index.js  # Spécifiez
        - ./api/package.json:/usr/src/app/package.json
  ogr:  
    image: ghcr.io/osgeo/gdal:alpine-small-latest
    volumes:
      - ./data:/data
      - ./etl:/etl
volumes:
  pgdata: